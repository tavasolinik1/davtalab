version: '3.9'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10

  keycloak:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - '8080:8080'

  backend:
    build: ./backend
    environment:
      NODE_ENV: development
      DATABASE_URL: ${DATABASE_URL}
      BACKEND_PORT: ${BACKEND_PORT}
      JWT_AUDIENCE: ${JWT_AUDIENCE}
      JWT_ISSUER: ${JWT_ISSUER}
      KEYCLOAK_JWKS_URL: ${KEYCLOAK_JWKS_URL}
      PII_ENC_KEY_BASE64: ${PII_ENC_KEY_BASE64}
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
    ports:
      - '3000:3000'
    command: sh -c "npx prisma migrate deploy && node dist/main.js"

  frontend:
    build: ./frontend
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    ports:
      - '5173:5173'

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana
    ports:
      - '3001:3000'

volumes:
  db-data: